/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "../utils/scaffold-eth/contract";

const deployedContracts = {
  10: {
    ConstantInitialVoiceCreditProxy: {
      address: "0x319e1e10B7a0199C4bFd85C3e8f81bdfbfE74907",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_balance",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "getVoiceCredits",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076928,
    },
    FreeForAllGatekeeper: {
      address: "0x49FFB9303a09D95E32DBCD1BAEE7fdb411c68A9F",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "register",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_maci",
              type: "address",
            },
          ],
          name: "setMaciInstance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076931,
    },
    MACIWrapper: {
      address: "0x948Da8bDeeff90eBe594c88172Af9bceD6812f3D",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IPollFactory",
              name: "_pollFactory",
              type: "address",
            },
            {
              internalType: "contract IMessageProcessorFactory",
              name: "_messageProcessorFactory",
              type: "address",
            },
            {
              internalType: "contract ITallyFactory",
              name: "_tallyFactory",
              type: "address",
            },
            {
              internalType: "contract SignUpGatekeeper",
              name: "_signUpGatekeeper",
              type: "address",
            },
            {
              internalType: "contract InitialVoiceCreditProxy",
              name: "_initialVoiceCreditProxy",
              type: "address",
            },
            {
              internalType: "contract TopupCredit",
              name: "_topupCredit",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "_stateTreeDepth",
              type: "uint8",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_caller",
              type: "address",
            },
          ],
          name: "CallerMustBePoll",
          type: "error",
        },
        {
          inputs: [],
          name: "DefaultZeroBadIndex",
          type: "error",
        },
        {
          inputs: [],
          name: "DepthTooLarge",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidMessage",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidPubKey",
          type: "error",
        },
        {
          inputs: [],
          name: "NumberOfLeavesCannotBeZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
          ],
          name: "PollAddressDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          name: "PollDoesNotExist",
          type: "error",
        },
        {
          inputs: [],
          name: "PoseidonHashLibrariesNotLinked",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          name: "PreviousPollNotCompleted",
          type: "error",
        },
        {
          inputs: [],
          name: "PubKeyAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "SignupTemporaryBlocked",
          type: "error",
        },
        {
          inputs: [],
          name: "TooManySignups",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_coordinatorPubKeyX",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_coordinatorPubKeyY",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              indexed: false,
              internalType: "struct MACI.PollContracts",
              name: "pollAddr",
              type: "tuple",
            },
          ],
          name: "DeployPoll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              indexed: false,
              internalType: "struct MACI.PollContracts",
              name: "pollContracts",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string[]",
              name: "options",
              type: "string[]",
            },
            {
              indexed: false,
              internalType: "string",
              name: "metadata",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
          ],
          name: "PollCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "tallyJsonCID",
              type: "string",
            },
          ],
          name: "PollTallyCIDUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_stateIndex",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_userPubKeyX",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_userPubKeyY",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_voiceCreditBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_timestamp",
              type: "uint256",
            },
          ],
          name: "SignUp",
          type: "event",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "coordinatorPubKey",
          outputs: [
            {
              internalType: "uint256",
              name: "x",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "y",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "_options",
              type: "string[]",
            },
            {
              internalType: "string",
              name: "_metadata",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "isQv",
              type: "uint8",
            },
          ],
          name: "createPoll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deployPoll",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              internalType: "struct MACI.PollContracts",
              name: "pollAddr",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
          ],
          name: "fetchPoll",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "bytes",
                  name: "encodedOptions",
                  type: "bytes",
                },
                {
                  internalType: "string",
                  name: "metadata",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "poll",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "messageProcessor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "tally",
                      type: "address",
                    },
                  ],
                  internalType: "struct MACI.PollContracts",
                  name: "pollContracts",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "numOfOptions",
                  type: "uint256",
                },
                {
                  internalType: "string[]",
                  name: "options",
                  type: "string[]",
                },
                {
                  internalType: "string",
                  name: "tallyJsonCID",
                  type: "string",
                },
              ],
              internalType: "struct MACIWrapper.PollData",
              name: "poll_",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_page",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_perPage",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_ascending",
              type: "bool",
            },
          ],
          name: "fetchPolls",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "bytes",
                  name: "encodedOptions",
                  type: "bytes",
                },
                {
                  internalType: "string",
                  name: "metadata",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "poll",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "messageProcessor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "tally",
                      type: "address",
                    },
                  ],
                  internalType: "struct MACI.PollContracts",
                  name: "pollContracts",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "numOfOptions",
                  type: "uint256",
                },
                {
                  internalType: "string[]",
                  name: "options",
                  type: "string[]",
                },
                {
                  internalType: "string",
                  name: "tallyJsonCID",
                  type: "string",
                },
              ],
              internalType: "struct MACIWrapper.PollData[]",
              name: "polls_",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
          ],
          name: "getPoll",
          outputs: [
            {
              internalType: "address",
              name: "poll",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
          ],
          name: "getPollId",
          outputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getStateTreeRoot",
          outputs: [
            {
              internalType: "uint256",
              name: "root",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "array",
              type: "uint256[2]",
            },
          ],
          name: "hash2",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[3]",
              name: "array",
              type: "uint256[3]",
            },
          ],
          name: "hash3",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[4]",
              name: "array",
              type: "uint256[4]",
            },
          ],
          name: "hash4",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[5]",
              name: "array",
              type: "uint256[5]",
            },
          ],
          name: "hash5",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "left",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "right",
              type: "uint256",
            },
          ],
          name: "hashLeftRight",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "msgType",
                  type: "uint256",
                },
                {
                  internalType: "uint256[10]",
                  name: "data",
                  type: "uint256[10]",
                },
              ],
              internalType: "struct DomainObjs.Message",
              name: "_message",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_encPubKey",
              type: "tuple",
            },
          ],
          name: "hashMessageAndEncPubKey",
          outputs: [
            {
              internalType: "uint256",
              name: "msgHash",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct DomainObjs.PubKey",
                  name: "pubKey",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "voiceCreditBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.StateLeaf",
              name: "_stateLeaf",
              type: "tuple",
            },
          ],
          name: "hashStateLeaf",
          outputs: [
            {
              internalType: "uint256",
              name: "ciphertext",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "initialVoiceCreditProxy",
          outputs: [
            {
              internalType: "contract InitialVoiceCreditProxy",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "isPublicKeyRegistered",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lazyIMTData",
          outputs: [
            {
              internalType: "uint40",
              name: "maxIndex",
              type: "uint40",
            },
            {
              internalType: "uint40",
              name: "numberOfLeaves",
              type: "uint40",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "messageProcessorFactory",
          outputs: [
            {
              internalType: "contract IMessageProcessorFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextPollId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "numSignUps",
          outputs: [
            {
              internalType: "uint256",
              name: "signUps",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "dataToPad",
              type: "uint256[2]",
            },
            {
              internalType: "uint256",
              name: "msgType",
              type: "uint256",
            },
          ],
          name: "padAndHashMessage",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "msgType",
                  type: "uint256",
                },
                {
                  internalType: "uint256[10]",
                  name: "data",
                  type: "uint256[10]",
                },
              ],
              internalType: "struct DomainObjs.Message",
              name: "message",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "padKey",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "msgHash",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "pollFactory",
          outputs: [
            {
              internalType: "contract IPollFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "pollIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "polls",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "array",
              type: "uint256[]",
            },
          ],
          name: "sha256Hash",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_pubKey",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "_signUpGatekeeperData",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "_initialVoiceCreditProxyData",
              type: "bytes",
            },
          ],
          name: "signUp",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "signUpGatekeeper",
          outputs: [
            {
              internalType: "contract SignUpGatekeeper",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "stateTreeDepth",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tallyFactory",
          outputs: [
            {
              internalType: "contract ITallyFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "topupCredit",
          outputs: [
            {
              internalType: "contract TopupCredit",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "treeDepths",
          outputs: [
            {
              internalType: "uint8",
              name: "intStateTreeDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "messageTreeSubDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "messageTreeDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "voteOptionTreeDepth",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_tallyJsonCID",
              type: "string",
            },
          ],
          name: "updatePollTallyCID",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "verifier",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "vkRegistry",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        MESSAGE_DATA_LENGTH: "maci-contracts/contracts/MACI.sol",
        deployPoll: "maci-contracts/contracts/MACI.sol",
        getPoll: "maci-contracts/contracts/MACI.sol",
        getStateTreeRoot: "maci-contracts/contracts/MACI.sol",
        hash2: "maci-contracts/contracts/MACI.sol",
        hash3: "maci-contracts/contracts/MACI.sol",
        hash4: "maci-contracts/contracts/MACI.sol",
        hash5: "maci-contracts/contracts/MACI.sol",
        hashLeftRight: "maci-contracts/contracts/MACI.sol",
        hashMessageAndEncPubKey: "maci-contracts/contracts/MACI.sol",
        hashStateLeaf: "maci-contracts/contracts/MACI.sol",
        initialVoiceCreditProxy: "maci-contracts/contracts/MACI.sol",
        lazyIMTData: "maci-contracts/contracts/MACI.sol",
        messageProcessorFactory: "maci-contracts/contracts/MACI.sol",
        nextPollId: "maci-contracts/contracts/MACI.sol",
        numSignUps: "maci-contracts/contracts/MACI.sol",
        owner: "maci-contracts/contracts/MACI.sol",
        padAndHashMessage: "maci-contracts/contracts/MACI.sol",
        pollFactory: "maci-contracts/contracts/MACI.sol",
        polls: "maci-contracts/contracts/MACI.sol",
        renounceOwnership: "maci-contracts/contracts/MACI.sol",
        sha256Hash: "maci-contracts/contracts/MACI.sol",
        signUp: "maci-contracts/contracts/MACI.sol",
        signUpGatekeeper: "maci-contracts/contracts/MACI.sol",
        stateTreeDepth: "maci-contracts/contracts/MACI.sol",
        tallyFactory: "maci-contracts/contracts/MACI.sol",
        topupCredit: "maci-contracts/contracts/MACI.sol",
        transferOwnership: "maci-contracts/contracts/MACI.sol",
      },
      deploymentBlockNumber: 121076955,
    },
    MessageProcessorFactory: {
      address: "0xf1d1c451D3cC0b18e1efab6a3dA336f9Ab0763Db",
      abi: [
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "messageProcessorAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076950,
    },
    PollFactory: {
      address: "0xa053d52154E098Fa2E478B47C8fbc074c2EE76d6",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidMaxValues",
          type: "error",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "maxMessages",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxVoteOptions",
                  type: "uint256",
                },
              ],
              internalType: "struct Params.MaxValues",
              name: "_maxValues",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_maci",
              type: "address",
            },
            {
              internalType: "contract TopupCredit",
              name: "_topupCredit",
              type: "address",
            },
            {
              internalType: "address",
              name: "_pollOwner",
              type: "address",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "pollAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076948,
    },
    PoseidonT3: {
      address: "0xF905b298726299bc5451d5c97dc8cA9Af665Ce72",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "input",
              type: "uint256[2]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076938,
    },
    PoseidonT4: {
      address: "0xD821bE793386c929cFe9294085E89759e865840f",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[3]",
              name: "input",
              type: "uint256[3]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076941,
    },
    PoseidonT5: {
      address: "0xE8E9B0C68c59DE10e1eFB1c6F61a1191a8670FdE",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[4]",
              name: "input",
              type: "uint256[4]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076943,
    },
    PoseidonT6: {
      address: "0x7c43d47E2fD2C2a8c935aC8148Da4104D5E56040",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[5]",
              name: "input",
              type: "uint256[5]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076945,
    },
    TallyFactory: {
      address: "0x539118BF6ed137e11fC81Fbd80Aa17D0aE6878f6",
      abi: [
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
            {
              internalType: "address",
              name: "_messageProcessor",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "tallyAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076953,
    },
    TopupCredit: {
      address: "0x81AEE9FafC6dC9d6ae1269383220A255608aafdE",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          inputs: [],
          name: "ExceedLimit",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "DECIMALS",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAXIMUM_AIRDROP_AMOUNT",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "airdrop",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "airdropTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076935,
    },
    Verifier: {
      address: "0x6E04CD43c9c51Cabbea7F46bce211EE8B957C57c",
      abi: [
        {
          inputs: [],
          name: "InvalidInputVal",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidProofQ",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingAddFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingMulFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingOpcodeFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PRIME_Q",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[8]",
              name: "_proof",
              type: "uint256[8]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "input",
              type: "uint256",
            },
          ],
          name: "verify",
          outputs: [
            {
              internalType: "bool",
              name: "isValid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076933,
    },
    VkRegistry: {
      address: "0x6823bA5C23C2279520E314D503ef9900e2314dEd",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidKeysParams",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ProcessVkAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "ProcessVkNotSet",
          type: "error",
        },
        {
          inputs: [],
          name: "SubsidyVkNotSet",
          type: "error",
        },
        {
          inputs: [],
          name: "TallyVkAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "TallyVkNotSet",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "ProcessVkSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "TallyVkSet",
          type: "event",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
          ],
          name: "genProcessVkSig",
          outputs: [
            {
              internalType: "uint256",
              name: "sig",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
          ],
          name: "genTallyVkSig",
          outputs: [
            {
              internalType: "uint256",
              name: "sig",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getProcessVk",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getProcessVkBySig",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getTallyVk",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getTallyVkBySig",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "hasProcessVk",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "hasTallyVk",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "isProcessVkSet",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "isTallyVkSet",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "_processVk",
              type: "tuple",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "_tallyVk",
              type: "tuple",
            },
          ],
          name: "setVerifyingKeys",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode[]",
              name: "_modes",
              type: "uint8[]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey[]",
              name: "_processVks",
              type: "tuple[]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey[]",
              name: "_tallyVks",
              type: "tuple[]",
            },
          ],
          name: "setVerifyingKeysBatch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 121076961,
    },
  },
  8453: {
    ConstantInitialVoiceCreditProxy: {
      address: "0x319e1e10B7a0199C4bFd85C3e8f81bdfbfE74907",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_balance",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "getVoiceCredits",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481586,
    },
    FreeForAllGatekeeper: {
      address: "0x49FFB9303a09D95E32DBCD1BAEE7fdb411c68A9F",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "register",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_maci",
              type: "address",
            },
          ],
          name: "setMaciInstance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481588,
    },
    MACIWrapper: {
      address: "0x948Da8bDeeff90eBe594c88172Af9bceD6812f3D",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IPollFactory",
              name: "_pollFactory",
              type: "address",
            },
            {
              internalType: "contract IMessageProcessorFactory",
              name: "_messageProcessorFactory",
              type: "address",
            },
            {
              internalType: "contract ITallyFactory",
              name: "_tallyFactory",
              type: "address",
            },
            {
              internalType: "contract SignUpGatekeeper",
              name: "_signUpGatekeeper",
              type: "address",
            },
            {
              internalType: "contract InitialVoiceCreditProxy",
              name: "_initialVoiceCreditProxy",
              type: "address",
            },
            {
              internalType: "contract TopupCredit",
              name: "_topupCredit",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "_stateTreeDepth",
              type: "uint8",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_caller",
              type: "address",
            },
          ],
          name: "CallerMustBePoll",
          type: "error",
        },
        {
          inputs: [],
          name: "DefaultZeroBadIndex",
          type: "error",
        },
        {
          inputs: [],
          name: "DepthTooLarge",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidMessage",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidPubKey",
          type: "error",
        },
        {
          inputs: [],
          name: "NumberOfLeavesCannotBeZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
          ],
          name: "PollAddressDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          name: "PollDoesNotExist",
          type: "error",
        },
        {
          inputs: [],
          name: "PoseidonHashLibrariesNotLinked",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          name: "PreviousPollNotCompleted",
          type: "error",
        },
        {
          inputs: [],
          name: "PubKeyAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "SignupTemporaryBlocked",
          type: "error",
        },
        {
          inputs: [],
          name: "TooManySignups",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_coordinatorPubKeyX",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_coordinatorPubKeyY",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              indexed: false,
              internalType: "struct MACI.PollContracts",
              name: "pollAddr",
              type: "tuple",
            },
          ],
          name: "DeployPoll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              indexed: false,
              internalType: "struct MACI.PollContracts",
              name: "pollContracts",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string[]",
              name: "options",
              type: "string[]",
            },
            {
              indexed: false,
              internalType: "string",
              name: "metadata",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
          ],
          name: "PollCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "tallyJsonCID",
              type: "string",
            },
          ],
          name: "PollTallyCIDUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_stateIndex",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_userPubKeyX",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_userPubKeyY",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_voiceCreditBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_timestamp",
              type: "uint256",
            },
          ],
          name: "SignUp",
          type: "event",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "coordinatorPubKey",
          outputs: [
            {
              internalType: "uint256",
              name: "x",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "y",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "_options",
              type: "string[]",
            },
            {
              internalType: "string",
              name: "_metadata",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "isQv",
              type: "uint8",
            },
          ],
          name: "createPoll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deployPoll",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              internalType: "struct MACI.PollContracts",
              name: "pollAddr",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
          ],
          name: "fetchPoll",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "bytes",
                  name: "encodedOptions",
                  type: "bytes",
                },
                {
                  internalType: "string",
                  name: "metadata",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "poll",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "messageProcessor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "tally",
                      type: "address",
                    },
                  ],
                  internalType: "struct MACI.PollContracts",
                  name: "pollContracts",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "numOfOptions",
                  type: "uint256",
                },
                {
                  internalType: "string[]",
                  name: "options",
                  type: "string[]",
                },
                {
                  internalType: "string",
                  name: "tallyJsonCID",
                  type: "string",
                },
              ],
              internalType: "struct MACIWrapper.PollData",
              name: "poll_",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_page",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_perPage",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_ascending",
              type: "bool",
            },
          ],
          name: "fetchPolls",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "bytes",
                  name: "encodedOptions",
                  type: "bytes",
                },
                {
                  internalType: "string",
                  name: "metadata",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "poll",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "messageProcessor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "tally",
                      type: "address",
                    },
                  ],
                  internalType: "struct MACI.PollContracts",
                  name: "pollContracts",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "numOfOptions",
                  type: "uint256",
                },
                {
                  internalType: "string[]",
                  name: "options",
                  type: "string[]",
                },
                {
                  internalType: "string",
                  name: "tallyJsonCID",
                  type: "string",
                },
              ],
              internalType: "struct MACIWrapper.PollData[]",
              name: "polls_",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
          ],
          name: "getPoll",
          outputs: [
            {
              internalType: "address",
              name: "poll",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
          ],
          name: "getPollId",
          outputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getStateTreeRoot",
          outputs: [
            {
              internalType: "uint256",
              name: "root",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "array",
              type: "uint256[2]",
            },
          ],
          name: "hash2",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[3]",
              name: "array",
              type: "uint256[3]",
            },
          ],
          name: "hash3",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[4]",
              name: "array",
              type: "uint256[4]",
            },
          ],
          name: "hash4",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[5]",
              name: "array",
              type: "uint256[5]",
            },
          ],
          name: "hash5",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "left",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "right",
              type: "uint256",
            },
          ],
          name: "hashLeftRight",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "msgType",
                  type: "uint256",
                },
                {
                  internalType: "uint256[10]",
                  name: "data",
                  type: "uint256[10]",
                },
              ],
              internalType: "struct DomainObjs.Message",
              name: "_message",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_encPubKey",
              type: "tuple",
            },
          ],
          name: "hashMessageAndEncPubKey",
          outputs: [
            {
              internalType: "uint256",
              name: "msgHash",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct DomainObjs.PubKey",
                  name: "pubKey",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "voiceCreditBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.StateLeaf",
              name: "_stateLeaf",
              type: "tuple",
            },
          ],
          name: "hashStateLeaf",
          outputs: [
            {
              internalType: "uint256",
              name: "ciphertext",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "initialVoiceCreditProxy",
          outputs: [
            {
              internalType: "contract InitialVoiceCreditProxy",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "isPublicKeyRegistered",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lazyIMTData",
          outputs: [
            {
              internalType: "uint40",
              name: "maxIndex",
              type: "uint40",
            },
            {
              internalType: "uint40",
              name: "numberOfLeaves",
              type: "uint40",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "messageProcessorFactory",
          outputs: [
            {
              internalType: "contract IMessageProcessorFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextPollId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "numSignUps",
          outputs: [
            {
              internalType: "uint256",
              name: "signUps",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "dataToPad",
              type: "uint256[2]",
            },
            {
              internalType: "uint256",
              name: "msgType",
              type: "uint256",
            },
          ],
          name: "padAndHashMessage",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "msgType",
                  type: "uint256",
                },
                {
                  internalType: "uint256[10]",
                  name: "data",
                  type: "uint256[10]",
                },
              ],
              internalType: "struct DomainObjs.Message",
              name: "message",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "padKey",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "msgHash",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "pollFactory",
          outputs: [
            {
              internalType: "contract IPollFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "pollIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "polls",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "array",
              type: "uint256[]",
            },
          ],
          name: "sha256Hash",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_pubKey",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "_signUpGatekeeperData",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "_initialVoiceCreditProxyData",
              type: "bytes",
            },
          ],
          name: "signUp",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "signUpGatekeeper",
          outputs: [
            {
              internalType: "contract SignUpGatekeeper",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "stateTreeDepth",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tallyFactory",
          outputs: [
            {
              internalType: "contract ITallyFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "topupCredit",
          outputs: [
            {
              internalType: "contract TopupCredit",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "treeDepths",
          outputs: [
            {
              internalType: "uint8",
              name: "intStateTreeDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "messageTreeSubDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "messageTreeDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "voteOptionTreeDepth",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_tallyJsonCID",
              type: "string",
            },
          ],
          name: "updatePollTallyCID",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "verifier",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "vkRegistry",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        MESSAGE_DATA_LENGTH: "maci-contracts/contracts/MACI.sol",
        deployPoll: "maci-contracts/contracts/MACI.sol",
        getPoll: "maci-contracts/contracts/MACI.sol",
        getStateTreeRoot: "maci-contracts/contracts/MACI.sol",
        hash2: "maci-contracts/contracts/MACI.sol",
        hash3: "maci-contracts/contracts/MACI.sol",
        hash4: "maci-contracts/contracts/MACI.sol",
        hash5: "maci-contracts/contracts/MACI.sol",
        hashLeftRight: "maci-contracts/contracts/MACI.sol",
        hashMessageAndEncPubKey: "maci-contracts/contracts/MACI.sol",
        hashStateLeaf: "maci-contracts/contracts/MACI.sol",
        initialVoiceCreditProxy: "maci-contracts/contracts/MACI.sol",
        lazyIMTData: "maci-contracts/contracts/MACI.sol",
        messageProcessorFactory: "maci-contracts/contracts/MACI.sol",
        nextPollId: "maci-contracts/contracts/MACI.sol",
        numSignUps: "maci-contracts/contracts/MACI.sol",
        owner: "maci-contracts/contracts/MACI.sol",
        padAndHashMessage: "maci-contracts/contracts/MACI.sol",
        pollFactory: "maci-contracts/contracts/MACI.sol",
        polls: "maci-contracts/contracts/MACI.sol",
        renounceOwnership: "maci-contracts/contracts/MACI.sol",
        sha256Hash: "maci-contracts/contracts/MACI.sol",
        signUp: "maci-contracts/contracts/MACI.sol",
        signUpGatekeeper: "maci-contracts/contracts/MACI.sol",
        stateTreeDepth: "maci-contracts/contracts/MACI.sol",
        tallyFactory: "maci-contracts/contracts/MACI.sol",
        topupCredit: "maci-contracts/contracts/MACI.sol",
        transferOwnership: "maci-contracts/contracts/MACI.sol",
      },
      deploymentBlockNumber: 15481611,
    },
    MessageProcessorFactory: {
      address: "0xf1d1c451D3cC0b18e1efab6a3dA336f9Ab0763Db",
      abi: [
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "messageProcessorAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481606,
    },
    PollFactory: {
      address: "0xa053d52154E098Fa2E478B47C8fbc074c2EE76d6",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidMaxValues",
          type: "error",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "maxMessages",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxVoteOptions",
                  type: "uint256",
                },
              ],
              internalType: "struct Params.MaxValues",
              name: "_maxValues",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_maci",
              type: "address",
            },
            {
              internalType: "contract TopupCredit",
              name: "_topupCredit",
              type: "address",
            },
            {
              internalType: "address",
              name: "_pollOwner",
              type: "address",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "pollAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481604,
    },
    PoseidonT3: {
      address: "0xF905b298726299bc5451d5c97dc8cA9Af665Ce72",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "input",
              type: "uint256[2]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481595,
    },
    PoseidonT4: {
      address: "0xD821bE793386c929cFe9294085E89759e865840f",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[3]",
              name: "input",
              type: "uint256[3]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481597,
    },
    PoseidonT5: {
      address: "0xE8E9B0C68c59DE10e1eFB1c6F61a1191a8670FdE",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[4]",
              name: "input",
              type: "uint256[4]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481600,
    },
    PoseidonT6: {
      address: "0x7c43d47E2fD2C2a8c935aC8148Da4104D5E56040",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[5]",
              name: "input",
              type: "uint256[5]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481602,
    },
    TallyFactory: {
      address: "0x539118BF6ed137e11fC81Fbd80Aa17D0aE6878f6",
      abi: [
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
            {
              internalType: "address",
              name: "_messageProcessor",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "tallyAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481608,
    },
    TopupCredit: {
      address: "0x81AEE9FafC6dC9d6ae1269383220A255608aafdE",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          inputs: [],
          name: "ExceedLimit",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "DECIMALS",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAXIMUM_AIRDROP_AMOUNT",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "airdrop",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "airdropTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481593,
    },
    Verifier: {
      address: "0x6E04CD43c9c51Cabbea7F46bce211EE8B957C57c",
      abi: [
        {
          inputs: [],
          name: "InvalidInputVal",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidProofQ",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingAddFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingMulFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingOpcodeFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PRIME_Q",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[8]",
              name: "_proof",
              type: "uint256[8]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "input",
              type: "uint256",
            },
          ],
          name: "verify",
          outputs: [
            {
              internalType: "bool",
              name: "isValid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481591,
    },
    VkRegistry: {
      address: "0x6823bA5C23C2279520E314D503ef9900e2314dEd",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidKeysParams",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ProcessVkAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "ProcessVkNotSet",
          type: "error",
        },
        {
          inputs: [],
          name: "SubsidyVkNotSet",
          type: "error",
        },
        {
          inputs: [],
          name: "TallyVkAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "TallyVkNotSet",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "ProcessVkSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "TallyVkSet",
          type: "event",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
          ],
          name: "genProcessVkSig",
          outputs: [
            {
              internalType: "uint256",
              name: "sig",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
          ],
          name: "genTallyVkSig",
          outputs: [
            {
              internalType: "uint256",
              name: "sig",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getProcessVk",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getProcessVkBySig",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getTallyVk",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getTallyVkBySig",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "hasProcessVk",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "hasTallyVk",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "isProcessVkSet",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "isTallyVkSet",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "_processVk",
              type: "tuple",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "_tallyVk",
              type: "tuple",
            },
          ],
          name: "setVerifyingKeys",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode[]",
              name: "_modes",
              type: "uint8[]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey[]",
              name: "_processVks",
              type: "tuple[]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey[]",
              name: "_tallyVks",
              type: "tuple[]",
            },
          ],
          name: "setVerifyingKeysBatch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 15481616,
    },
  },
  17000: {
    ConstantInitialVoiceCreditProxy: {
      address: "0x201389f87A33f49Dc49ad2d23d151C3413db7e91",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_balance",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "getVoiceCredits",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688278,
    },
    FreeForAllGatekeeper: {
      address: "0x4b10032A185622B8a8e63961aE2c816f38Cdeb24",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "register",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_maci",
              type: "address",
            },
          ],
          name: "setMaciInstance",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688280,
    },
    MACIWrapper: {
      address: "0x5D7Adfd02254Ff6b15b73F326068e2dd4D3aEE16",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IPollFactory",
              name: "_pollFactory",
              type: "address",
            },
            {
              internalType: "contract IMessageProcessorFactory",
              name: "_messageProcessorFactory",
              type: "address",
            },
            {
              internalType: "contract ITallyFactory",
              name: "_tallyFactory",
              type: "address",
            },
            {
              internalType: "contract SignUpGatekeeper",
              name: "_signUpGatekeeper",
              type: "address",
            },
            {
              internalType: "contract InitialVoiceCreditProxy",
              name: "_initialVoiceCreditProxy",
              type: "address",
            },
            {
              internalType: "contract TopupCredit",
              name: "_topupCredit",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "_stateTreeDepth",
              type: "uint8",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_caller",
              type: "address",
            },
          ],
          name: "CallerMustBePoll",
          type: "error",
        },
        {
          inputs: [],
          name: "DefaultZeroBadIndex",
          type: "error",
        },
        {
          inputs: [],
          name: "DepthTooLarge",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidMessage",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidPubKey",
          type: "error",
        },
        {
          inputs: [],
          name: "NumberOfLeavesCannotBeZero",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
          ],
          name: "PollAddressDoesNotExist",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          name: "PollDoesNotExist",
          type: "error",
        },
        {
          inputs: [],
          name: "PoseidonHashLibrariesNotLinked",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          name: "PreviousPollNotCompleted",
          type: "error",
        },
        {
          inputs: [],
          name: "PubKeyAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "SignupTemporaryBlocked",
          type: "error",
        },
        {
          inputs: [],
          name: "TooManySignups",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_coordinatorPubKeyX",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_coordinatorPubKeyY",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              indexed: false,
              internalType: "struct MACI.PollContracts",
              name: "pollAddr",
              type: "tuple",
            },
          ],
          name: "DeployPoll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              indexed: false,
              internalType: "struct MACI.PollContracts",
              name: "pollContracts",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string[]",
              name: "options",
              type: "string[]",
            },
            {
              indexed: false,
              internalType: "string",
              name: "metadata",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
          ],
          name: "PollCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "tallyJsonCID",
              type: "string",
            },
          ],
          name: "PollTallyCIDUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_stateIndex",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_userPubKeyX",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "_userPubKeyY",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_voiceCreditBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_timestamp",
              type: "uint256",
            },
          ],
          name: "SignUp",
          type: "event",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "coordinatorPubKey",
          outputs: [
            {
              internalType: "uint256",
              name: "x",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "y",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string[]",
              name: "_options",
              type: "string[]",
            },
            {
              internalType: "string",
              name: "_metadata",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "isQv",
              type: "uint8",
            },
          ],
          name: "createPoll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deployPoll",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "poll",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "messageProcessor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tally",
                  type: "address",
                },
              ],
              internalType: "struct MACI.PollContracts",
              name: "pollAddr",
              type: "tuple",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
          ],
          name: "fetchPoll",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "bytes",
                  name: "encodedOptions",
                  type: "bytes",
                },
                {
                  internalType: "string",
                  name: "metadata",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "poll",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "messageProcessor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "tally",
                      type: "address",
                    },
                  ],
                  internalType: "struct MACI.PollContracts",
                  name: "pollContracts",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "numOfOptions",
                  type: "uint256",
                },
                {
                  internalType: "string[]",
                  name: "options",
                  type: "string[]",
                },
                {
                  internalType: "string",
                  name: "tallyJsonCID",
                  type: "string",
                },
              ],
              internalType: "struct MACIWrapper.PollData",
              name: "poll_",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_page",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_perPage",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "_ascending",
              type: "bool",
            },
          ],
          name: "fetchPolls",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "bytes",
                  name: "encodedOptions",
                  type: "bytes",
                },
                {
                  internalType: "string",
                  name: "metadata",
                  type: "string",
                },
                {
                  components: [
                    {
                      internalType: "address",
                      name: "poll",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "messageProcessor",
                      type: "address",
                    },
                    {
                      internalType: "address",
                      name: "tally",
                      type: "address",
                    },
                  ],
                  internalType: "struct MACI.PollContracts",
                  name: "pollContracts",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "numOfOptions",
                  type: "uint256",
                },
                {
                  internalType: "string[]",
                  name: "options",
                  type: "string[]",
                },
                {
                  internalType: "string",
                  name: "tallyJsonCID",
                  type: "string",
                },
              ],
              internalType: "struct MACIWrapper.PollData[]",
              name: "polls_",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
          ],
          name: "getPoll",
          outputs: [
            {
              internalType: "address",
              name: "poll",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
          ],
          name: "getPollId",
          outputs: [
            {
              internalType: "uint256",
              name: "pollId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getStateTreeRoot",
          outputs: [
            {
              internalType: "uint256",
              name: "root",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "array",
              type: "uint256[2]",
            },
          ],
          name: "hash2",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[3]",
              name: "array",
              type: "uint256[3]",
            },
          ],
          name: "hash3",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[4]",
              name: "array",
              type: "uint256[4]",
            },
          ],
          name: "hash4",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[5]",
              name: "array",
              type: "uint256[5]",
            },
          ],
          name: "hash5",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "left",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "right",
              type: "uint256",
            },
          ],
          name: "hashLeftRight",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "msgType",
                  type: "uint256",
                },
                {
                  internalType: "uint256[10]",
                  name: "data",
                  type: "uint256[10]",
                },
              ],
              internalType: "struct DomainObjs.Message",
              name: "_message",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_encPubKey",
              type: "tuple",
            },
          ],
          name: "hashMessageAndEncPubKey",
          outputs: [
            {
              internalType: "uint256",
              name: "msgHash",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct DomainObjs.PubKey",
                  name: "pubKey",
                  type: "tuple",
                },
                {
                  internalType: "uint256",
                  name: "voiceCreditBalance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.StateLeaf",
              name: "_stateLeaf",
              type: "tuple",
            },
          ],
          name: "hashStateLeaf",
          outputs: [
            {
              internalType: "uint256",
              name: "ciphertext",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "initialVoiceCreditProxy",
          outputs: [
            {
              internalType: "contract InitialVoiceCreditProxy",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "isPublicKeyRegistered",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lazyIMTData",
          outputs: [
            {
              internalType: "uint40",
              name: "maxIndex",
              type: "uint40",
            },
            {
              internalType: "uint40",
              name: "numberOfLeaves",
              type: "uint40",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "messageProcessorFactory",
          outputs: [
            {
              internalType: "contract IMessageProcessorFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextPollId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "numSignUps",
          outputs: [
            {
              internalType: "uint256",
              name: "signUps",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "dataToPad",
              type: "uint256[2]",
            },
            {
              internalType: "uint256",
              name: "msgType",
              type: "uint256",
            },
          ],
          name: "padAndHashMessage",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "msgType",
                  type: "uint256",
                },
                {
                  internalType: "uint256[10]",
                  name: "data",
                  type: "uint256[10]",
                },
              ],
              internalType: "struct DomainObjs.Message",
              name: "message",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "padKey",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "msgHash",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "pollFactory",
          outputs: [
            {
              internalType: "contract IPollFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "pollIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "polls",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "array",
              type: "uint256[]",
            },
          ],
          name: "sha256Hash",
          outputs: [
            {
              internalType: "uint256",
              name: "result",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_pubKey",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "_signUpGatekeeperData",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "_initialVoiceCreditProxyData",
              type: "bytes",
            },
          ],
          name: "signUp",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "signUpGatekeeper",
          outputs: [
            {
              internalType: "contract SignUpGatekeeper",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "stateTreeDepth",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "tallyFactory",
          outputs: [
            {
              internalType: "contract ITallyFactory",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "topupCredit",
          outputs: [
            {
              internalType: "contract TopupCredit",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "treeDepths",
          outputs: [
            {
              internalType: "uint8",
              name: "intStateTreeDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "messageTreeSubDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "messageTreeDepth",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "voteOptionTreeDepth",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_pollId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_tallyJsonCID",
              type: "string",
            },
          ],
          name: "updatePollTallyCID",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "verifier",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "vkRegistry",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        MESSAGE_DATA_LENGTH: "maci-contracts/contracts/MACI.sol",
        deployPoll: "maci-contracts/contracts/MACI.sol",
        getPoll: "maci-contracts/contracts/MACI.sol",
        getStateTreeRoot: "maci-contracts/contracts/MACI.sol",
        hash2: "maci-contracts/contracts/MACI.sol",
        hash3: "maci-contracts/contracts/MACI.sol",
        hash4: "maci-contracts/contracts/MACI.sol",
        hash5: "maci-contracts/contracts/MACI.sol",
        hashLeftRight: "maci-contracts/contracts/MACI.sol",
        hashMessageAndEncPubKey: "maci-contracts/contracts/MACI.sol",
        hashStateLeaf: "maci-contracts/contracts/MACI.sol",
        initialVoiceCreditProxy: "maci-contracts/contracts/MACI.sol",
        lazyIMTData: "maci-contracts/contracts/MACI.sol",
        messageProcessorFactory: "maci-contracts/contracts/MACI.sol",
        nextPollId: "maci-contracts/contracts/MACI.sol",
        numSignUps: "maci-contracts/contracts/MACI.sol",
        owner: "maci-contracts/contracts/MACI.sol",
        padAndHashMessage: "maci-contracts/contracts/MACI.sol",
        pollFactory: "maci-contracts/contracts/MACI.sol",
        polls: "maci-contracts/contracts/MACI.sol",
        renounceOwnership: "maci-contracts/contracts/MACI.sol",
        sha256Hash: "maci-contracts/contracts/MACI.sol",
        signUp: "maci-contracts/contracts/MACI.sol",
        signUpGatekeeper: "maci-contracts/contracts/MACI.sol",
        stateTreeDepth: "maci-contracts/contracts/MACI.sol",
        tallyFactory: "maci-contracts/contracts/MACI.sol",
        topupCredit: "maci-contracts/contracts/MACI.sol",
        transferOwnership: "maci-contracts/contracts/MACI.sol",
      },
      deploymentBlockNumber: 1688309,
    },
    MessageProcessorFactory: {
      address: "0x67744580E1ffC939e7DaE8B9c7F3899B0667d8A8",
      abi: [
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "messageProcessorAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688306,
    },
    PollFactory: {
      address: "0xc38aaEEDE5c2bF5b9aC695B08B34F75715B78Acd",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidMaxValues",
          type: "error",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "maxMessages",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxVoteOptions",
                  type: "uint256",
                },
              ],
              internalType: "struct Params.MaxValues",
              name: "_maxValues",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint8",
                  name: "intStateTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeSubDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "messageTreeDepth",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "voteOptionTreeDepth",
                  type: "uint8",
                },
              ],
              internalType: "struct Params.TreeDepths",
              name: "_treeDepths",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct DomainObjs.PubKey",
              name: "_coordinatorPubKey",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "_maci",
              type: "address",
            },
            {
              internalType: "contract TopupCredit",
              name: "_topupCredit",
              type: "address",
            },
            {
              internalType: "address",
              name: "_pollOwner",
              type: "address",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "pollAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688295,
    },
    PoseidonT3: {
      address: "0xEFa12284D15DA33DF6109F8680a55d46Bc1d81f3",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "input",
              type: "uint256[2]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688286,
    },
    PoseidonT4: {
      address: "0x3A8ca4e2AB003dfB84a6512590716ED4d5faDE2c",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[3]",
              name: "input",
              type: "uint256[3]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688288,
    },
    PoseidonT5: {
      address: "0xDD5EFD296Df5bb33f54066bF40e0128fD75187Fc",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[4]",
              name: "input",
              type: "uint256[4]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688289,
    },
    PoseidonT6: {
      address: "0x9cE518851C4dd8afB5091a3e5082c5a774A2eD04",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[5]",
              name: "input",
              type: "uint256[5]",
            },
          ],
          name: "poseidon",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688291,
    },
    TallyFactory: {
      address: "0x5c5463C4B3338005D8c1c97c2D085315D00C2a1e",
      abi: [
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
            {
              internalType: "address",
              name: "_vkRegistry",
              type: "address",
            },
            {
              internalType: "address",
              name: "_poll",
              type: "address",
            },
            {
              internalType: "address",
              name: "_messageProcessor",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "deploy",
          outputs: [
            {
              internalType: "address",
              name: "tallyAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688307,
    },
    TopupCredit: {
      address: "0x48F2422B4100D8466d0F9c1966bDdC1e70461950",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          inputs: [],
          name: "ExceedLimit",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "DECIMALS",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAXIMUM_AIRDROP_AMOUNT",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "airdrop",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "airdropTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688284,
    },
    Verifier: {
      address: "0xD7ABc1b93328c4F220Ca1E4E4453C5739D610950",
      abi: [
        {
          inputs: [],
          name: "InvalidInputVal",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidProofQ",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingAddFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingMulFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PairingOpcodeFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "PRIME_Q",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[8]",
              name: "_proof",
              type: "uint256[8]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "input",
              type: "uint256",
            },
          ],
          name: "verify",
          outputs: [
            {
              internalType: "bool",
              name: "isValid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688282,
    },
    VkRegistry: {
      address: "0x47b929fcc8B6D4F22b500f9CB4cE49eb4bA2CDEf",
      abi: [
        {
          inputs: [],
          stateMutability: "payable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidKeysParams",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ProcessVkAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "ProcessVkNotSet",
          type: "error",
        },
        {
          inputs: [],
          name: "SubsidyVkNotSet",
          type: "error",
        },
        {
          inputs: [],
          name: "TallyVkAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "TallyVkNotSet",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "ProcessVkSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "TallyVkSet",
          type: "event",
        },
        {
          inputs: [],
          name: "MESSAGE_DATA_LENGTH",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
          ],
          name: "genProcessVkSig",
          outputs: [
            {
              internalType: "uint256",
              name: "sig",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
          ],
          name: "genTallyVkSig",
          outputs: [
            {
              internalType: "uint256",
              name: "sig",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getProcessVk",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getProcessVkBySig",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getTallyVk",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "getTallyVkBySig",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "vk",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "hasProcessVk",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "hasTallyVk",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "isProcessVkSet",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sig",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
          ],
          name: "isTallyVkSet",
          outputs: [
            {
              internalType: "bool",
              name: "isSet",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode",
              name: "_mode",
              type: "uint8",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "_processVk",
              type: "tuple",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey",
              name: "_tallyVk",
              type: "tuple",
            },
          ],
          name: "setVerifyingKeys",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_stateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_intStateTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_voteOptionTreeDepth",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_messageBatchSize",
              type: "uint256",
            },
            {
              internalType: "enum DomainObjs.Mode[]",
              name: "_modes",
              type: "uint8[]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey[]",
              name: "_processVks",
              type: "tuple[]",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point",
                  name: "alpha1",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "beta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "gamma2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256[2]",
                      name: "x",
                      type: "uint256[2]",
                    },
                    {
                      internalType: "uint256[2]",
                      name: "y",
                      type: "uint256[2]",
                    },
                  ],
                  internalType: "struct Pairing.G2Point",
                  name: "delta2",
                  type: "tuple",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct Pairing.G1Point[]",
                  name: "ic",
                  type: "tuple[]",
                },
              ],
              internalType: "struct SnarkCommon.VerifyingKey[]",
              name: "_tallyVks",
              type: "tuple[]",
            },
          ],
          name: "setVerifyingKeysBatch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      deploymentBlockNumber: 1688312,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
